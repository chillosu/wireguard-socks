name: Build and Test

on:
  push:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: wireguard-socks:local
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify image
        run: docker images | grep wireguard-socks

      - name: Save image for testing
        run: docker save wireguard-socks:local > /tmp/wireguard-socks.tar

      - name: Upload artifact for testing
        uses: actions/upload-artifact@v4
        with:
          name: wireguard-socks-test
          path: /tmp/wireguard-socks.tar
          retention-days: 1

  test-positive:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Make scripts executable
        run: |
          chmod +x tests/common-setup.sh
          chmod +x tests/test-wireguard-positive.sh

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: wireguard-socks-test
          path: /tmp

      - name: Load image
        run: docker load --input /tmp/wireguard-socks.tar

      - name: Install WireGuard
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard-tools

      - name: Run positive path tests
        run: |
          # Enable debug output
          set -x
          # Run test with increased verbosity
          sudo DOCKER_DEBUG=1 ./tests/test-wireguard-positive.sh
        env:
          DOCKER_DEBUG: 1

  test-negative:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Make scripts executable
        run: |
          chmod +x tests/common-setup.sh
          chmod +x tests/test-wireguard-negative.sh

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: wireguard-socks-test
          path: /tmp

      - name: Load image
        run: docker load --input /tmp/wireguard-socks.tar

      - name: Install WireGuard
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard-tools

      - name: Run negative path tests
        run: |
          # Enable debug output
          set -x
          # Run test with increased verbosity
          sudo DOCKER_DEBUG=1 ./tests/test-wireguard-negative.sh
        env:
          DOCKER_DEBUG: 1

  publish:
    needs: [test-positive, test-negative]
    if: github.ref == 'refs/heads/main'
    environment: Prod
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: wireguard-socks-test
          path: /tmp

      - name: Load image
        run: docker load --input /tmp/wireguard-socks.tar

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag and push
        run: |
          docker tag wireguard-socks:local chillosu/wireguard-socks:latest
          docker push chillosu/wireguard-socks:latest 