name: Build and Test

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check for base image updates
        id: check
        run: |
          # Get current base image digest
          CURRENT_DIGEST=$(docker pull linuxserver/wireguard:latest | grep -i digest | awk '{print $3}')
          echo "current_digest=$CURRENT_DIGEST" >> $GITHUB_OUTPUT
          
          # Compare with last known digest (if exists)
          if [ -f .base-image-digest ]; then
            LAST_DIGEST=$(cat .base-image-digest)
            if [ "$CURRENT_DIGEST" != "$LAST_DIGEST" ]; then
              echo "Base image updated from $LAST_DIGEST to $CURRENT_DIGEST"
              echo "updated=true" >> $GITHUB_OUTPUT
            else
              echo "No base image updates"
              echo "updated=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "First run, storing initial digest"
            echo "updated=true" >> $GITHUB_OUTPUT
          fi
          echo "$CURRENT_DIGEST" > .base-image-digest

      - name: Set up Docker Buildx
        if: github.event_name != 'schedule' || steps.check.outputs.updated == 'true'
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Build for testing
        if: github.event_name != 'schedule' || steps.check.outputs.updated == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: wireguard-socks:local
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Wireguard tests
        if: github.event_name != 'schedule' || steps.check.outputs.updated == 'true'
        run: sudo ./tests/test-wireguard.sh

      - name: Verify image
        run: docker images | grep wireguard-socks

      - name: Save image for publishing
        if: github.ref == 'refs/heads/main'
        run: docker save wireguard-socks:local > /tmp/wireguard-socks.tar

      - name: Upload artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: wireguard-socks
          path: /tmp/wireguard-socks.tar

  publish:
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: Prod
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: wireguard-socks
          path: /tmp

      - name: Load image
        run: docker load --input /tmp/wireguard-socks.tar

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag and push
        run: |
          docker tag wireguard-socks:local chillosu/wireguard-socks:latest
          docker push chillosu/wireguard-socks:latest 